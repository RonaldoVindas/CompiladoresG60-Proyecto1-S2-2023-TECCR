
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Tue Sep 26 19:35:11 CST 2023
//----------------------------------------------------

package analizadores;

import java.util.*;
import java.util.ArrayList;
import java_cup.runtime.*;

/** CUP v0.10k generated parser.
  * @version Tue Sep 26 19:35:11 CST 2023
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\151\000\002\002\004\000\002\003\005\000\002\003" +
    "\003\000\002\004\003\000\002\005\003\000\002\006\003" +
    "\000\002\007\003\000\002\007\003\000\002\011\003\000" +
    "\002\012\004\000\002\012\002\000\002\013\016\000\002" +
    "\013\003\000\002\013\004\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\025\010\000\002\025\006\000\002\025\004\000" +
    "\002\014\006\000\002\014\002\000\002\015\007\000\002" +
    "\015\002\000\002\016\010\000\002\016\004\000\002\017" +
    "\004\000\002\017\002\000\002\021\003\000\002\021\003" +
    "\000\002\021\003\000\002\021\003\000\002\021\003\000" +
    "\002\021\003\000\002\021\003\000\002\021\003\000\002" +
    "\021\003\000\002\021\003\000\002\021\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\022\010" +
    "\000\002\023\006\000\002\037\012\000\002\037\016\000" +
    "\002\037\004\000\002\041\012\000\002\040\012\000\002" +
    "\040\016\000\002\044\012\000\002\045\007\000\002\045" +
    "\005\000\002\045\003\000\002\046\005\000\002\046\003" +
    "\000\002\046\002\000\002\047\005\000\002\047\003\000" +
    "\002\050\005\000\002\050\003\000\002\050\002\000\002" +
    "\051\007\000\002\052\004\000\002\053\007\000\002\054" +
    "\007\000\002\026\004\000\002\026\002\000\002\027\005" +
    "\000\002\027\005\000\002\027\005\000\002\027\005\000" +
    "\002\027\005\000\002\027\005\000\002\027\003\000\002" +
    "\027\003\000\002\027\002\000\002\030\003\000\002\031" +
    "\003\000\002\031\003\000\002\031\003\000\002\031\003" +
    "\000\002\031\005\000\002\031\003\000\002\031\007\000" +
    "\002\032\005\000\002\033\003\000\002\033\003\000\002" +
    "\033\003\000\002\033\003\000\002\033\003\000\002\033" +
    "\003\000\002\034\004\000\002\035\005\000\002\035\005" +
    "\000\002\035\005\000\002\035\005\000\002\036\006\000" +
    "\002\036\006\000\002\036\002\000\002\042\004\000\002" +
    "\042\002\000\002\043\007" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\346\000\006\003\005\004\006\001\002\000\004\002" +
    "\350\001\002\000\004\002\uffff\001\002\000\024\003\ufff7" +
    "\006\ufff7\007\ufff7\022\ufff7\023\ufff7\024\ufff7\025\ufff7\026" +
    "\ufff7\062\ufff7\001\002\000\024\003\022\006\014\007\023" +
    "\022\012\023\020\024\015\025\010\026\016\062\011\001" +
    "\002\000\004\062\ufff0\001\002\000\004\005\324\001\002" +
    "\000\004\062\ufff3\001\002\000\024\003\ufff8\006\ufff8\007" +
    "\ufff8\022\ufff8\023\ufff8\024\ufff8\025\ufff8\026\ufff8\062\ufff8" +
    "\001\002\000\004\064\040\001\002\000\004\062\ufff1\001" +
    "\002\000\004\062\uffef\001\002\000\004\062\035\001\002" +
    "\000\004\062\ufff2\001\002\000\024\003\ufff5\006\ufff5\007" +
    "\ufff5\022\ufff5\023\ufff5\024\ufff5\025\ufff5\026\ufff5\062\ufff5" +
    "\001\002\000\006\067\033\071\034\001\002\000\004\062" +
    "\025\001\002\000\004\002\000\001\002\000\014\022\012" +
    "\023\020\024\015\025\010\026\016\001\002\000\004\062" +
    "\027\001\002\000\004\031\031\001\002\000\004\071\032" +
    "\001\002\000\056\036\ufffe\037\ufffe\040\ufffe\041\ufffe\042" +
    "\ufffe\043\ufffe\045\ufffe\046\ufffe\047\ufffe\050\ufffe\051\ufffe" +
    "\052\ufffe\053\ufffe\054\ufffe\060\ufffe\061\ufffe\063\ufffe\064" +
    "\ufffe\065\ufffe\070\ufffe\071\ufffe\072\ufffe\001\002\000\052" +
    "\003\uffee\006\uffee\007\uffee\010\uffee\011\uffee\013\uffee\014" +
    "\uffee\015\uffee\016\uffee\017\uffee\020\uffee\021\uffee\022\uffee" +
    "\023\uffee\024\uffee\025\uffee\026\uffee\031\uffee\062\uffee\067" +
    "\uffee\001\002\000\026\002\uffe6\003\ufff4\006\ufff4\007\ufff4" +
    "\022\ufff4\023\ufff4\024\ufff4\025\ufff4\026\ufff4\062\ufff4\001" +
    "\002\000\052\003\uffec\006\uffec\007\uffec\010\uffec\011\uffec" +
    "\013\uffec\014\uffec\015\uffec\016\uffec\017\uffec\020\uffec\021" +
    "\uffec\022\uffec\023\uffec\024\uffec\025\uffec\026\uffec\031\uffec" +
    "\062\uffec\067\uffec\001\002\000\004\031\031\001\002\000" +
    "\004\071\037\001\002\000\052\003\uffed\006\uffed\007\uffed" +
    "\010\uffed\011\uffed\013\uffed\014\uffed\015\uffed\016\uffed\017" +
    "\uffed\020\uffed\021\uffed\022\uffed\023\uffed\024\uffed\025\uffed" +
    "\026\uffed\031\uffed\062\uffed\067\uffed\001\002\000\004\065" +
    "\041\001\002\000\004\066\042\001\002\000\044\003\uffe4" +
    "\007\uffe4\011\uffe4\013\uffe4\014\uffe4\015\uffe4\016\uffe4\017" +
    "\uffe4\020\uffe4\021\uffe4\022\uffe4\023\uffe4\024\uffe4\025\uffe4" +
    "\026\uffe4\031\uffe4\067\uffe4\001\002\000\044\003\063\007" +
    "\023\011\062\013\071\014\067\015\066\016\051\017\046" +
    "\020\045\021\065\022\012\023\020\024\015\025\010\026" +
    "\016\031\031\067\070\001\002\000\046\003\uffda\007\uffda" +
    "\010\uffda\011\uffda\013\uffda\014\uffda\015\uffda\016\uffda\017" +
    "\uffda\020\uffda\021\uffda\022\uffda\023\uffda\024\uffda\025\uffda" +
    "\026\uffda\031\uffda\067\uffda\001\002\000\004\064\320\001" +
    "\002\000\004\071\317\001\002\000\046\003\uffe2\007\uffe2" +
    "\010\uffe2\011\uffe2\013\uffe2\014\uffe2\015\uffe2\016\uffe2\017" +
    "\uffe2\020\uffe2\021\uffe2\022\uffe2\023\uffe2\024\uffe2\025\uffe2" +
    "\026\uffe2\031\uffe2\067\uffe2\001\002\000\046\003\uffdd\007" +
    "\uffdd\010\uffdd\011\uffdd\013\uffdd\014\uffdd\015\uffdd\016\uffdd" +
    "\017\uffdd\020\uffdd\021\uffdd\022\uffdd\023\uffdd\024\uffdd\025" +
    "\uffdd\026\uffdd\031\uffdd\067\uffdd\001\002\000\004\064\313" +
    "\001\002\000\004\070\310\001\002\000\046\003\uffd9\007" +
    "\uffd9\010\uffd9\011\uffd9\013\uffd9\014\uffd9\015\uffd9\016\uffd9" +
    "\017\uffd9\020\uffd9\021\uffd9\022\uffd9\023\uffd9\024\uffd9\025" +
    "\uffd9\026\uffd9\031\uffd9\067\uffd9\001\002\000\046\003\uffdc" +
    "\007\uffdc\010\uffdc\011\uffdc\013\uffdc\014\uffdc\015\uffdc\016" +
    "\uffdc\017\uffdc\020\uffdc\021\uffdc\022\uffdc\023\uffdc\024\uffdc" +
    "\025\uffdc\026\uffdc\031\uffdc\067\uffdc\001\002\000\046\003" +
    "\uffdf\007\uffdf\010\uffdf\011\uffdf\013\uffdf\014\uffdf\015\uffdf" +
    "\016\uffdf\017\uffdf\020\uffdf\021\uffdf\022\uffdf\023\uffdf\024" +
    "\uffdf\025\uffdf\026\uffdf\031\uffdf\067\uffdf\001\002\000\046" +
    "\003\uffde\007\uffde\010\uffde\011\uffde\013\uffde\014\uffde\015" +
    "\uffde\016\uffde\017\uffde\020\uffde\021\uffde\022\uffde\023\uffde" +
    "\024\uffde\025\uffde\026\uffde\031\uffde\067\uffde\001\002\000" +
    "\046\003\uffe5\007\uffe5\010\uffe5\011\uffe5\013\uffe5\014\uffe5" +
    "\015\uffe5\016\uffe5\017\uffe5\020\uffe5\021\uffe5\022\uffe5\023" +
    "\uffe5\024\uffe5\025\uffe5\026\uffe5\031\uffe5\067\uffe5\001\002" +
    "\000\046\003\uffe3\007\uffe3\010\uffe3\011\uffe3\013\uffe3\014" +
    "\uffe3\015\uffe3\016\uffe3\017\uffe3\020\uffe3\021\uffe3\022\uffe3" +
    "\023\uffe3\024\uffe3\025\uffe3\026\uffe3\031\uffe3\067\uffe3\001" +
    "\002\000\046\003\uffe0\007\uffe0\010\uffe0\011\uffe0\013\uffe0" +
    "\014\uffe0\015\uffe0\016\uffe0\017\uffe0\020\uffe0\021\uffe0\022" +
    "\uffe0\023\uffe0\024\uffe0\025\uffe0\026\uffe0\031\uffe0\067\uffe0" +
    "\001\002\000\004\064\274\001\002\000\006\067\273\071" +
    "\034\001\002\000\004\062\266\001\002\000\004\064\262" +
    "\001\002\000\004\064\234\001\002\000\004\064\217\001" +
    "\002\000\004\002\uffe7\001\002\000\004\064\074\001\002" +
    "\000\046\003\uffdb\007\uffdb\010\uffdb\011\uffdb\013\uffdb\014" +
    "\uffdb\015\uffdb\016\uffdb\017\uffdb\020\uffdb\021\uffdb\022\uffdb" +
    "\023\uffdb\024\uffdb\025\uffdb\026\uffdb\031\uffdb\067\uffdb\001" +
    "\002\000\046\003\uffe1\007\uffe1\010\uffe1\011\uffe1\013\uffe1" +
    "\014\uffe1\015\uffe1\016\uffe1\017\uffe1\020\uffe1\021\uffe1\022" +
    "\uffe1\023\uffe1\024\uffe1\025\uffe1\026\uffe1\031\uffe1\067\uffe1" +
    "\001\002\000\044\027\107\030\115\031\031\033\113\034" +
    "\100\035\116\047\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc" +
    "\054\uffbc\055\102\057\114\062\120\064\075\065\uffbc\001" +
    "\002\000\044\027\107\030\115\031\031\033\113\034\100" +
    "\035\116\047\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc\054" +
    "\uffbc\055\102\057\114\062\120\064\075\065\uffbc\001\002" +
    "\000\052\036\uffb2\037\uffb2\040\uffb2\041\uffb2\042\uffb2\043" +
    "\uffb2\045\uffb2\046\uffb2\047\uffb2\050\uffb2\051\uffb2\052\uffb2" +
    "\053\uffb2\054\uffb2\060\uffb2\061\uffb2\063\uffb2\065\uffb2\071" +
    "\uffb2\072\uffb2\001\002\000\016\060\205\061\206\063\uff9c" +
    "\065\uff9c\071\uff9c\072\uff9c\001\002\000\052\036\ufffd\037" +
    "\ufffd\040\ufffd\041\ufffd\042\ufffd\043\ufffd\045\ufffd\046\ufffd" +
    "\047\ufffd\050\ufffd\051\ufffd\052\ufffd\053\ufffd\054\ufffd\060" +
    "\ufffd\061\ufffd\063\ufffd\065\ufffd\071\ufffd\072\ufffd\001\002" +
    "\000\052\036\uffae\037\uffae\040\uffae\041\uffae\042\uffae\043" +
    "\uffae\045\uffae\046\uffae\047\uffae\050\uffae\051\uffae\052\uffae" +
    "\053\uffae\054\uffae\060\uffae\061\uffae\063\uffae\065\uffae\071" +
    "\uffae\072\uffae\001\002\000\004\062\201\001\002\000\052" +
    "\036\161\037\154\040\163\041\162\042\160\043\156\045" +
    "\157\046\164\047\uffb3\050\uffb3\051\uffb3\052\uffb3\053\uffb3" +
    "\054\uffb3\060\uffb3\061\uffb3\063\uffb3\065\uffb3\071\uffb3\072" +
    "\uffb3\001\002\000\012\063\uffd6\065\uffd6\071\uffd6\072\uffd6" +
    "\001\002\000\026\047\136\050\133\051\135\052\132\053" +
    "\137\054\134\063\uffd8\065\uffd8\071\uffd8\072\uffd8\001\002" +
    "\000\052\036\uffb1\037\uffb1\040\uffb1\041\uffb1\042\uffb1\043" +
    "\uffb1\045\uffb1\046\uffb1\047\uffb1\050\uffb1\051\uffb1\052\uffb1" +
    "\053\uffb1\054\uffb1\060\uffb1\061\uffb1\063\uffb1\065\uffb1\071" +
    "\uffb1\072\uffb1\001\002\000\052\036\ufffb\037\ufffb\040\ufffb" +
    "\041\ufffb\042\ufffb\043\ufffb\045\ufffb\046\ufffb\047\ufffb\050" +
    "\ufffb\051\ufffb\052\ufffb\053\ufffb\054\ufffb\060\ufffb\061\ufffb" +
    "\063\ufffb\065\ufffb\071\ufffb\072\ufffb\001\002\000\052\036" +
    "\uffac\037\uffac\040\uffac\041\uffac\042\uffac\043\uffac\045\uffac" +
    "\046\uffac\047\uffac\050\uffac\051\uffac\052\uffac\053\uffac\054" +
    "\uffac\060\uffac\061\uffac\063\uffac\065\uffac\071\uffac\072\uffac" +
    "\001\002\000\052\036\uffb0\037\uffb0\040\uffb0\041\uffb0\042" +
    "\uffb0\043\uffb0\045\uffb0\046\uffb0\047\uffb0\050\uffb0\051\uffb0" +
    "\052\uffb0\053\uffb0\054\uffb0\060\uffb0\061\uffb0\063\uffb0\065" +
    "\uffb0\071\uffb0\072\uffb0\001\002\000\004\065\142\001\002" +
    "\000\052\036\ufff9\037\ufff9\040\ufff9\041\ufff9\042\ufff9\043" +
    "\ufff9\045\ufff9\046\ufff9\047\ufff9\050\ufff9\051\ufff9\052\ufff9" +
    "\053\ufff9\054\ufff9\060\ufff9\061\ufff9\063\ufff9\065\ufff9\071" +
    "\ufff9\072\ufff9\001\002\000\004\062\126\001\002\000\052" +
    "\036\ufffa\037\ufffa\040\ufffa\041\ufffa\042\ufffa\043\ufffa\045" +
    "\ufffa\046\ufffa\047\ufffa\050\ufffa\051\ufffa\052\ufffa\053\ufffa" +
    "\054\ufffa\060\ufffa\061\ufffa\063\ufffa\065\ufffa\071\ufffa\072" +
    "\ufffa\001\002\000\052\036\ufffc\037\ufffc\040\ufffc\041\ufffc" +
    "\042\ufffc\043\ufffc\045\ufffc\046\ufffc\047\ufffc\050\ufffc\051" +
    "\ufffc\052\ufffc\053\ufffc\054\ufffc\060\ufffc\061\ufffc\063\ufffc" +
    "\065\ufffc\071\ufffc\072\ufffc\001\002\000\052\036\uffaf\037" +
    "\uffaf\040\uffaf\041\uffaf\042\uffaf\043\uffaf\045\uffaf\046\uffaf" +
    "\047\uffaf\050\uffaf\051\uffaf\052\uffaf\053\uffaf\054\uffaf\060" +
    "\uffaf\061\uffaf\063\uffaf\065\uffaf\071\uffaf\072\uffaf\001\002" +
    "\000\004\031\031\001\002\000\012\063\uffd7\065\uffd7\071" +
    "\uffd7\072\uffd7\001\002\000\004\064\123\001\002\000\044" +
    "\027\107\030\115\031\031\033\113\034\100\035\116\047" +
    "\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc\054\uffbc\055\102" +
    "\057\114\062\120\064\075\065\uffbc\001\002\000\004\065" +
    "\125\001\002\000\052\036\uffab\037\uffab\040\uffab\041\uffab" +
    "\042\uffab\043\uffab\045\uffab\046\uffab\047\uffab\050\uffab\051" +
    "\uffab\052\uffab\053\uffab\054\uffab\060\uffab\061\uffab\063\uffab" +
    "\065\uffab\071\uffab\072\uffab\001\002\000\036\027\107\030" +
    "\115\031\031\033\113\034\100\035\116\047\uffbc\050\uffbc" +
    "\051\uffbc\052\uffbc\053\uffbc\054\uffbc\062\120\064\075\001" +
    "\002\000\052\036\uffb1\037\uffb1\040\uffb1\041\uffb1\042\uffb1" +
    "\043\uffb1\045\uffb1\046\uffb1\047\uffb1\050\uffb1\051\uffb1\052" +
    "\uffb1\053\uffb1\054\uffb1\060\uffa0\061\uffa0\063\uffa0\065\uffa0" +
    "\071\uffa0\072\uffa0\001\002\000\016\047\136\050\133\051" +
    "\135\052\132\053\137\054\134\001\002\000\016\060\uff9f" +
    "\061\uff9f\063\uff9f\065\uff9f\071\uff9f\072\uff9f\001\002\000" +
    "\036\027\uffa6\030\uffa6\031\uffa6\033\uffa6\034\uffa6\035\uffa6" +
    "\060\uffa6\061\uffa6\062\uffa6\063\uffa6\064\uffa6\065\uffa6\071" +
    "\uffa6\072\uffa6\001\002\000\036\027\uffa8\030\uffa8\031\uffa8" +
    "\033\uffa8\034\uffa8\035\uffa8\060\uffa8\061\uffa8\062\uffa8\063" +
    "\uffa8\064\uffa8\065\uffa8\071\uffa8\072\uffa8\001\002\000\036" +
    "\027\uffa4\030\uffa4\031\uffa4\033\uffa4\034\uffa4\035\uffa4\060" +
    "\uffa4\061\uffa4\062\uffa4\063\uffa4\064\uffa4\065\uffa4\071\uffa4" +
    "\072\uffa4\001\002\000\036\027\uffa7\030\uffa7\031\uffa7\033" +
    "\uffa7\034\uffa7\035\uffa7\060\uffa7\061\uffa7\062\uffa7\063\uffa7" +
    "\064\uffa7\065\uffa7\071\uffa7\072\uffa7\001\002\000\036\027" +
    "\uffa9\030\uffa9\031\uffa9\033\uffa9\034\uffa9\035\uffa9\060\uffa9" +
    "\061\uffa9\062\uffa9\063\uffa9\064\uffa9\065\uffa9\071\uffa9\072" +
    "\uffa9\001\002\000\036\027\uffa5\030\uffa5\031\uffa5\033\uffa5" +
    "\034\uffa5\035\uffa5\060\uffa5\061\uffa5\062\uffa5\063\uffa5\064" +
    "\uffa5\065\uffa5\071\uffa5\072\uffa5\001\002\000\036\027\107" +
    "\030\115\031\031\033\113\034\100\035\116\060\uffbc\061" +
    "\uffbc\062\120\063\uffbc\064\075\065\uffbc\071\uffbc\072\uffbc" +
    "\001\002\000\016\060\uffaa\061\uffaa\063\uffaa\065\uffaa\071" +
    "\uffaa\072\uffaa\001\002\000\004\066\143\001\002\000\044" +
    "\003\uffe4\007\uffe4\011\uffe4\013\uffe4\014\uffe4\015\uffe4\016" +
    "\uffe4\017\uffe4\020\uffe4\021\uffe4\022\uffe4\023\uffe4\024\uffe4" +
    "\025\uffe4\026\uffe4\031\uffe4\067\uffe4\001\002\000\044\003" +
    "\063\007\023\011\062\013\071\014\067\015\066\016\051" +
    "\017\046\020\045\021\065\022\012\023\020\024\015\025" +
    "\010\026\016\031\031\067\145\001\002\000\006\012\147" +
    "\071\146\001\002\000\046\003\uffcf\007\uffcf\010\uffcf\011" +
    "\uffcf\013\uffcf\014\uffcf\015\uffcf\016\uffcf\017\uffcf\020\uffcf" +
    "\021\uffcf\022\uffcf\023\uffcf\024\uffcf\025\uffcf\026\uffcf\031" +
    "\uffcf\067\uffcf\001\002\000\004\066\150\001\002\000\044" +
    "\003\uffe4\007\uffe4\011\uffe4\013\uffe4\014\uffe4\015\uffe4\016" +
    "\uffe4\017\uffe4\020\uffe4\021\uffe4\022\uffe4\023\uffe4\024\uffe4" +
    "\025\uffe4\026\uffe4\031\uffe4\067\uffe4\001\002\000\044\003" +
    "\063\007\023\011\062\013\071\014\067\015\066\016\051" +
    "\017\046\020\045\021\065\022\012\023\020\024\015\025" +
    "\010\026\016\031\031\067\152\001\002\000\004\071\153" +
    "\001\002\000\046\003\uffce\007\uffce\010\uffce\011\uffce\013" +
    "\uffce\014\uffce\015\uffce\016\uffce\017\uffce\020\uffce\021\uffce" +
    "\022\uffce\023\uffce\024\uffce\025\uffce\026\uffce\031\uffce\067" +
    "\uffce\001\002\000\022\027\107\030\115\031\031\033\113" +
    "\034\100\035\116\062\120\064\075\001\002\000\032\047" +
    "\uffbd\050\uffbd\051\uffbd\052\uffbd\053\uffbd\054\uffbd\060\uffbd" +
    "\061\uffbd\063\uffbd\065\uffbd\071\uffbd\072\uffbd\001\002\000" +
    "\022\027\107\030\115\031\031\033\113\034\100\035\116" +
    "\062\120\064\075\001\002\000\032\047\uffb5\050\uffb5\051" +
    "\uffb5\052\uffb5\053\uffb5\054\uffb5\060\uffb5\061\uffb5\063\uffb5" +
    "\065\uffb5\071\uffb5\072\uffb5\001\002\000\022\027\107\030" +
    "\115\031\031\033\113\034\100\035\116\062\120\064\075" +
    "\001\002\000\022\027\107\030\115\031\031\033\113\034" +
    "\100\035\116\062\120\064\075\001\002\000\022\027\107" +
    "\030\115\031\031\033\113\034\100\035\116\062\120\064" +
    "\075\001\002\000\022\027\107\030\115\031\031\033\113" +
    "\034\100\035\116\062\120\064\075\001\002\000\032\047" +
    "\uffb4\050\uffb4\051\uffb4\052\uffb4\053\uffb4\054\uffb4\060\uffb4" +
    "\061\uffb4\063\uffb4\065\uffb4\071\uffb4\072\uffb4\001\002\000" +
    "\052\036\161\037\154\040\163\041\162\042\160\043\156" +
    "\045\157\046\164\047\uffb3\050\uffb3\051\uffb3\052\uffb3\053" +
    "\uffb3\054\uffb3\060\uffb3\061\uffb3\063\uffb3\065\uffb3\071\uffb3" +
    "\072\uffb3\001\002\000\032\047\uffb9\050\uffb9\051\uffb9\052" +
    "\uffb9\053\uffb9\054\uffb9\060\uffb9\061\uffb9\063\uffb9\065\uffb9" +
    "\071\uffb9\072\uffb9\001\002\000\052\036\161\037\154\040" +
    "\163\041\162\042\160\043\156\045\157\046\164\047\uffb3" +
    "\050\uffb3\051\uffb3\052\uffb3\053\uffb3\054\uffb3\060\uffb3\061" +
    "\uffb3\063\uffb3\065\uffb3\071\uffb3\072\uffb3\001\002\000\032" +
    "\047\uffb8\050\uffb8\051\uffb8\052\uffb8\053\uffb8\054\uffb8\060" +
    "\uffb8\061\uffb8\063\uffb8\065\uffb8\071\uffb8\072\uffb8\001\002" +
    "\000\052\036\161\037\154\040\163\041\162\042\160\043" +
    "\156\045\157\046\164\047\uffb3\050\uffb3\051\uffb3\052\uffb3" +
    "\053\uffb3\054\uffb3\060\uffb3\061\uffb3\063\uffb3\065\uffb3\071" +
    "\uffb3\072\uffb3\001\002\000\032\047\uffbb\050\uffbb\051\uffbb" +
    "\052\uffbb\053\uffbb\054\uffbb\060\uffbb\061\uffbb\063\uffbb\065" +
    "\uffbb\071\uffbb\072\uffbb\001\002\000\052\036\161\037\154" +
    "\040\163\041\162\042\160\043\156\045\157\046\164\047" +
    "\uffb3\050\uffb3\051\uffb3\052\uffb3\053\uffb3\054\uffb3\060\uffb3" +
    "\061\uffb3\063\uffb3\065\uffb3\071\uffb3\072\uffb3\001\002\000" +
    "\032\047\uffb7\050\uffb7\051\uffb7\052\uffb7\053\uffb7\054\uffb7" +
    "\060\uffb7\061\uffb7\063\uffb7\065\uffb7\071\uffb7\072\uffb7\001" +
    "\002\000\052\036\161\037\154\040\163\041\162\042\160" +
    "\043\156\045\157\046\164\047\uffb3\050\uffb3\051\uffb3\052" +
    "\uffb3\053\uffb3\054\uffb3\060\uffb3\061\uffb3\063\uffb3\065\uffb3" +
    "\071\uffb3\072\uffb3\001\002\000\032\047\uffb6\050\uffb6\051" +
    "\uffb6\052\uffb6\053\uffb6\054\uffb6\060\uffb6\061\uffb6\063\uffb6" +
    "\065\uffb6\071\uffb6\072\uffb6\001\002\000\052\036\161\037" +
    "\154\040\163\041\162\042\160\043\156\045\157\046\164" +
    "\047\uffb3\050\uffb3\051\uffb3\052\uffb3\053\uffb3\054\uffb3\060" +
    "\uffb3\061\uffb3\063\uffb3\065\uffb3\071\uffb3\072\uffb3\001\002" +
    "\000\032\047\uffba\050\uffba\051\uffba\052\uffba\053\uffba\054" +
    "\uffba\060\uffba\061\uffba\063\uffba\065\uffba\071\uffba\072\uffba" +
    "\001\002\000\036\027\107\030\115\031\031\033\113\034" +
    "\100\035\116\047\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc" +
    "\054\uffbc\062\120\064\075\001\002\000\052\036\uffb1\037" +
    "\uffb1\040\uffb1\041\uffb1\042\uffb1\043\uffb1\045\uffb1\046\uffb1" +
    "\047\uffb1\050\uffb1\051\uffb1\052\uffb1\053\uffb1\054\uffb1\060" +
    "\uffa2\061\uffa2\063\uffa2\065\uffa2\071\uffa2\072\uffa2\001\002" +
    "\000\016\060\uffa1\061\uffa1\063\uffa1\065\uffa1\071\uffa1\072" +
    "\uffa1\001\002\000\012\063\uffa3\065\uffa3\071\uffa3\072\uffa3" +
    "\001\002\000\004\062\212\001\002\000\004\062\207\001" +
    "\002\000\006\055\102\057\114\001\002\000\016\060\205" +
    "\061\206\063\uff9c\065\uff9c\071\uff9c\072\uff9c\001\002\000" +
    "\012\063\uff9d\065\uff9d\071\uff9d\072\uff9d\001\002\000\006" +
    "\055\102\057\114\001\002\000\016\060\205\061\206\063" +
    "\uff9c\065\uff9c\071\uff9c\072\uff9c\001\002\000\012\063\uff9e" +
    "\065\uff9e\071\uff9e\072\uff9e\001\002\000\004\065\216\001" +
    "\002\000\052\036\uffad\037\uffad\040\uffad\041\uffad\042\uffad" +
    "\043\uffad\045\uffad\046\uffad\047\uffad\050\uffad\051\uffad\052" +
    "\uffad\053\uffad\054\uffad\060\uffad\061\uffad\063\uffad\065\uffad" +
    "\071\uffad\072\uffad\001\002\000\004\031\031\001\002\000" +
    "\004\065\221\001\002\000\004\066\222\001\002\000\006" +
    "\010\uff9a\067\uff9a\001\002\000\006\010\225\067\224\001" +
    "\002\000\004\071\233\001\002\000\004\062\227\001\002" +
    "\000\006\010\uff9b\067\uff9b\001\002\000\044\027\107\030" +
    "\115\031\031\033\113\034\100\035\116\047\uffbc\050\uffbc" +
    "\051\uffbc\052\uffbc\053\uffbc\054\uffbc\055\102\057\114\062" +
    "\120\064\075\072\uffbc\001\002\000\004\072\231\001\002" +
    "\000\046\003\uffe4\007\uffe4\010\uffe4\011\uffe4\013\uffe4\014" +
    "\uffe4\015\uffe4\016\uffe4\017\uffe4\020\uffe4\021\uffe4\022\uffe4" +
    "\023\uffe4\024\uffe4\025\uffe4\026\uffe4\031\uffe4\067\uffe4\001" +
    "\002\000\046\003\063\007\023\010\uff99\011\062\013\071" +
    "\014\067\015\066\016\051\017\046\020\045\021\065\022" +
    "\012\023\020\024\015\025\010\026\016\031\031\067\uff99" +
    "\001\002\000\046\003\uffd0\007\uffd0\010\uffd0\011\uffd0\013" +
    "\uffd0\014\uffd0\015\uffd0\016\uffd0\017\uffd0\020\uffd0\021\uffd0" +
    "\022\uffd0\023\uffd0\024\uffd0\025\uffd0\026\uffd0\031\uffd0\067" +
    "\uffd0\001\002\000\006\031\031\063\uffc7\001\002\000\010" +
    "\063\uffc8\065\uffc5\070\260\001\002\000\004\065\253\001" +
    "\002\000\004\065\uffca\001\002\000\004\063\241\001\002" +
    "\000\004\031\031\001\002\000\010\063\uffc5\065\uffc5\070" +
    "\251\001\002\000\006\063\244\065\uffcb\001\002\000\006" +
    "\031\031\065\uffc2\001\002\000\006\065\uffc3\070\247\001" +
    "\002\000\004\065\uffcc\001\002\000\044\027\107\030\115" +
    "\031\031\033\113\034\100\035\116\047\uffbc\050\uffbc\051" +
    "\uffbc\052\uffbc\053\uffbc\054\uffbc\055\102\057\114\062\120" +
    "\064\075\065\uffbc\001\002\000\004\065\uffc4\001\002\000" +
    "\046\027\107\030\115\031\031\033\113\034\100\035\116" +
    "\047\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc\054\uffbc\055" +
    "\102\057\114\062\120\063\uffbc\064\075\065\uffbc\001\002" +
    "\000\006\063\uffc6\065\uffc6\001\002\000\004\066\254\001" +
    "\002\000\044\003\uffe4\007\uffe4\011\uffe4\013\uffe4\014\uffe4" +
    "\015\uffe4\016\uffe4\017\uffe4\020\uffe4\021\uffe4\022\uffe4\023" +
    "\uffe4\024\uffe4\025\uffe4\026\uffe4\031\uffe4\067\uffe4\001\002" +
    "\000\044\003\063\007\023\011\062\013\071\014\067\015" +
    "\066\016\051\017\046\020\045\021\065\022\012\023\020" +
    "\024\015\025\010\026\016\031\031\067\256\001\002\000" +
    "\004\071\257\001\002\000\046\003\uffcd\007\uffcd\010\uffcd" +
    "\011\uffcd\013\uffcd\014\uffcd\015\uffcd\016\uffcd\017\uffcd\020" +
    "\uffcd\021\uffcd\022\uffcd\023\uffcd\024\uffcd\025\uffcd\026\uffcd" +
    "\031\uffcd\067\uffcd\001\002\000\046\027\107\030\115\031" +
    "\031\033\113\034\100\035\116\047\uffbc\050\uffbc\051\uffbc" +
    "\052\uffbc\053\uffbc\054\uffbc\055\102\057\114\062\120\063" +
    "\uffbc\064\075\065\uffbc\001\002\000\006\063\uffc9\065\uffc6" +
    "\001\002\000\044\027\107\030\115\031\031\033\113\034" +
    "\100\035\116\047\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc" +
    "\054\uffbc\055\102\057\114\062\120\064\075\065\uffbc\001" +
    "\002\000\004\065\264\001\002\000\004\071\265\001\002" +
    "\000\046\003\uffbe\007\uffbe\010\uffbe\011\uffbe\013\uffbe\014" +
    "\uffbe\015\uffbe\016\uffbe\017\uffbe\020\uffbe\021\uffbe\022\uffbe" +
    "\023\uffbe\024\uffbe\025\uffbe\026\uffbe\031\uffbe\067\uffbe\001" +
    "\002\000\004\031\031\001\002\000\006\070\270\071\037" +
    "\001\002\000\044\027\107\030\115\031\031\033\113\034" +
    "\100\035\116\047\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc" +
    "\054\uffbc\055\102\057\114\062\120\064\075\071\uffbc\001" +
    "\002\000\004\071\272\001\002\000\046\003\uffd5\007\uffd5" +
    "\010\uffd5\011\uffd5\013\uffd5\014\uffd5\015\uffd5\016\uffd5\017" +
    "\uffd5\020\uffd5\021\uffd5\022\uffd5\023\uffd5\024\uffd5\025\uffd5" +
    "\026\uffd5\031\uffd5\067\uffd5\001\002\000\046\003\uffd1\007" +
    "\uffd1\010\uffd1\011\uffd1\013\uffd1\014\uffd1\015\uffd1\016\uffd1" +
    "\017\uffd1\020\uffd1\021\uffd1\022\uffd1\023\uffd1\024\uffd1\025" +
    "\uffd1\026\uffd1\031\uffd1\067\uffd1\001\002\000\044\027\107" +
    "\030\115\031\031\033\113\034\100\035\116\047\uffbc\050" +
    "\uffbc\051\uffbc\052\uffbc\053\uffbc\054\uffbc\055\102\057\114" +
    "\062\120\064\075\065\uffbc\001\002\000\004\065\276\001" +
    "\002\000\004\066\277\001\002\000\044\003\uffe4\007\uffe4" +
    "\011\uffe4\013\uffe4\014\uffe4\015\uffe4\016\uffe4\017\uffe4\020" +
    "\uffe4\021\uffe4\022\uffe4\023\uffe4\024\uffe4\025\uffe4\026\uffe4" +
    "\031\uffe4\067\uffe4\001\002\000\044\003\063\007\023\011" +
    "\062\013\071\014\067\015\066\016\051\017\046\020\045" +
    "\021\065\022\012\023\020\024\015\025\010\026\016\031" +
    "\031\067\301\001\002\000\006\012\303\071\302\001\002" +
    "\000\046\003\uffd3\007\uffd3\010\uffd3\011\uffd3\013\uffd3\014" +
    "\uffd3\015\uffd3\016\uffd3\017\uffd3\020\uffd3\021\uffd3\022\uffd3" +
    "\023\uffd3\024\uffd3\025\uffd3\026\uffd3\031\uffd3\067\uffd3\001" +
    "\002\000\004\066\304\001\002\000\044\003\uffe4\007\uffe4" +
    "\011\uffe4\013\uffe4\014\uffe4\015\uffe4\016\uffe4\017\uffe4\020" +
    "\uffe4\021\uffe4\022\uffe4\023\uffe4\024\uffe4\025\uffe4\026\uffe4" +
    "\031\uffe4\067\uffe4\001\002\000\044\003\063\007\023\011" +
    "\062\013\071\014\067\015\066\016\051\017\046\020\045" +
    "\021\065\022\012\023\020\024\015\025\010\026\016\031" +
    "\031\067\306\001\002\000\004\071\307\001\002\000\046" +
    "\003\uffd2\007\uffd2\010\uffd2\011\uffd2\013\uffd2\014\uffd2\015" +
    "\uffd2\016\uffd2\017\uffd2\020\uffd2\021\uffd2\022\uffd2\023\uffd2" +
    "\024\uffd2\025\uffd2\026\uffd2\031\uffd2\067\uffd2\001\002\000" +
    "\044\027\107\030\115\031\031\033\113\034\100\035\116" +
    "\047\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc\054\uffbc\055" +
    "\102\057\114\062\120\064\075\071\uffbc\001\002\000\004" +
    "\071\312\001\002\000\046\003\uffd4\007\uffd4\010\uffd4\011" +
    "\uffd4\013\uffd4\014\uffd4\015\uffd4\016\uffd4\017\uffd4\020\uffd4" +
    "\021\uffd4\022\uffd4\023\uffd4\024\uffd4\025\uffd4\026\uffd4\031" +
    "\uffd4\067\uffd4\001\002\000\044\027\107\030\115\031\031" +
    "\033\113\034\100\035\116\047\uffbc\050\uffbc\051\uffbc\052" +
    "\uffbc\053\uffbc\054\uffbc\055\102\057\114\062\120\064\075" +
    "\065\uffbc\001\002\000\004\065\315\001\002\000\004\071" +
    "\316\001\002\000\046\003\uffc1\007\uffc1\010\uffc1\011\uffc1" +
    "\013\uffc1\014\uffc1\015\uffc1\016\uffc1\017\uffc1\020\uffc1\021" +
    "\uffc1\022\uffc1\023\uffc1\024\uffc1\025\uffc1\026\uffc1\031\uffc1" +
    "\067\uffc1\001\002\000\046\003\uffc0\007\uffc0\010\uffc0\011" +
    "\uffc0\013\uffc0\014\uffc0\015\uffc0\016\uffc0\017\uffc0\020\uffc0" +
    "\021\uffc0\022\uffc0\023\uffc0\024\uffc0\025\uffc0\026\uffc0\031" +
    "\uffc0\067\uffc0\001\002\000\004\031\031\001\002\000\004" +
    "\065\322\001\002\000\004\071\323\001\002\000\046\003" +
    "\uffbf\007\uffbf\010\uffbf\011\uffbf\013\uffbf\014\uffbf\015\uffbf" +
    "\016\uffbf\017\uffbf\020\uffbf\021\uffbf\022\uffbf\023\uffbf\024" +
    "\uffbf\025\uffbf\026\uffbf\031\uffbf\067\uffbf\001\002\000\004" +
    "\062\325\001\002\000\014\022\012\023\020\024\015\025" +
    "\010\026\016\001\002\000\004\062\327\001\002\000\004" +
    "\031\031\001\002\000\004\064\331\001\002\000\016\022" +
    "\012\023\020\024\015\025\010\026\016\065\uffea\001\002" +
    "\000\004\062\340\001\002\000\004\065\334\001\002\000" +
    "\004\066\335\001\002\000\044\003\uffe4\007\uffe4\011\uffe4" +
    "\013\uffe4\014\uffe4\015\uffe4\016\uffe4\017\uffe4\020\uffe4\021" +
    "\uffe4\022\uffe4\023\uffe4\024\uffe4\025\uffe4\026\uffe4\031\uffe4" +
    "\067\uffe4\001\002\000\044\003\063\007\023\011\062\013" +
    "\071\014\067\015\066\016\051\017\046\020\045\021\065" +
    "\022\012\023\020\024\015\025\010\026\016\031\031\067" +
    "\337\001\002\000\024\003\ufff6\006\ufff6\007\ufff6\022\ufff6" +
    "\023\ufff6\024\ufff6\025\ufff6\026\ufff6\062\ufff6\001\002\000" +
    "\004\031\031\001\002\000\006\063\343\065\uffe8\001\002" +
    "\000\004\065\uffeb\001\002\000\014\022\012\023\020\024" +
    "\015\025\010\026\016\001\002\000\004\062\345\001\002" +
    "\000\004\031\031\001\002\000\006\063\343\065\uffe8\001" +
    "\002\000\004\065\uffe9\001\002\000\004\002\001\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\346\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\012\006\001\001\000\012\013\012" +
    "\016\023\020\016\025\020\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\020\025\001" +
    "\001\000\002\001\001\000\004\004\027\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\004\035\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\017\042\001\001\000\036\004\051\020\063" +
    "\021\056\022\046\023\072\025\057\037\060\040\055\041" +
    "\054\044\047\051\053\052\071\053\043\054\052\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\004\105\005\110\006\116" +
    "\007\100\011\107\024\111\026\104\030\102\031\075\032" +
    "\120\034\103\035\076\001\001\000\032\004\105\005\110" +
    "\006\116\007\100\011\107\024\214\026\104\030\102\031" +
    "\075\032\120\034\103\035\076\001\001\000\002\001\001" +
    "\000\004\036\203\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\027\154\001\001\000\002" +
    "\001\001\000\004\033\137\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\121" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\004" +
    "\105\005\110\006\116\007\100\011\107\024\123\026\104" +
    "\030\102\031\075\032\120\034\103\035\076\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\004\126\005\110" +
    "\006\116\007\100\011\107\026\127\030\102\031\075\032" +
    "\130\001\001\000\002\001\001\000\004\033\137\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\004\105\005\110\006\116\007\100\011" +
    "\107\026\140\030\102\031\075\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\143\001\001\000\036\004" +
    "\051\020\063\021\056\022\046\023\072\025\057\037\060" +
    "\040\055\041\054\044\047\051\053\052\071\053\043\054" +
    "\052\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\017\150\001\001\000\036\004\051\020" +
    "\063\021\056\022\046\023\072\025\057\037\060\040\055" +
    "\041\054\044\047\051\053\052\071\053\043\054\052\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\004\105" +
    "\005\110\006\116\007\100\011\107\030\176\031\075\001" +
    "\001\000\002\001\001\000\020\004\105\005\110\006\116" +
    "\007\100\011\107\030\174\031\075\001\001\000\002\001" +
    "\001\000\020\004\105\005\110\006\116\007\100\011\107" +
    "\030\172\031\075\001\001\000\020\004\105\005\110\006" +
    "\116\007\100\011\107\030\170\031\075\001\001\000\020" +
    "\004\105\005\110\006\116\007\100\011\107\030\166\031" +
    "\075\001\001\000\020\004\105\005\110\006\116\007\100" +
    "\011\107\030\164\031\075\001\001\000\002\001\001\000" +
    "\004\027\165\001\001\000\002\001\001\000\004\027\167" +
    "\001\001\000\002\001\001\000\004\027\171\001\001\000" +
    "\002\001\001\000\004\027\173\001\001\000\002\001\001" +
    "\000\004\027\175\001\001\000\002\001\001\000\004\027" +
    "\177\001\001\000\002\001\001\000\024\004\201\005\110" +
    "\006\116\007\100\011\107\026\127\030\102\031\075\032" +
    "\202\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\035" +
    "\207\001\001\000\004\036\210\001\001\000\002\001\001" +
    "\000\004\035\212\001\001\000\004\036\213\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\217\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\042\222\001\001\000\004\043\225\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\004" +
    "\105\005\110\006\116\007\100\011\107\024\227\026\104" +
    "\030\102\031\075\032\120\034\103\035\076\001\001\000" +
    "\002\001\001\000\004\017\231\001\001\000\036\004\051" +
    "\020\063\021\056\022\046\023\072\025\057\037\060\040" +
    "\055\041\054\044\047\051\053\052\071\053\043\054\052" +
    "\001\001\000\002\001\001\000\012\004\234\045\235\046" +
    "\237\047\236\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\004\241\047" +
    "\242\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\004\244\050\245\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\004\105\005\110\006\116\007\100\011\107" +
    "\024\247\026\104\030\102\031\075\032\120\034\103\035" +
    "\076\001\001\000\002\001\001\000\032\004\105\005\110" +
    "\006\116\007\100\011\107\024\251\026\104\030\102\031" +
    "\075\032\120\034\103\035\076\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\254\001\001\000\036\004" +
    "\051\020\063\021\056\022\046\023\072\025\057\037\060" +
    "\040\055\041\054\044\047\051\053\052\071\053\043\054" +
    "\052\001\001\000\002\001\001\000\002\001\001\000\032" +
    "\004\105\005\110\006\116\007\100\011\107\024\260\026" +
    "\104\030\102\031\075\032\120\034\103\035\076\001\001" +
    "\000\002\001\001\000\032\004\105\005\110\006\116\007" +
    "\100\011\107\024\262\026\104\030\102\031\075\032\120" +
    "\034\103\035\076\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\004\266\001\001\000\002" +
    "\001\001\000\032\004\105\005\110\006\116\007\100\011" +
    "\107\024\270\026\104\030\102\031\075\032\120\034\103" +
    "\035\076\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\004\105\005\110\006\116\007\100" +
    "\011\107\024\274\026\104\030\102\031\075\032\120\034" +
    "\103\035\076\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\277\001\001\000\036\004\051\020\063\021" +
    "\056\022\046\023\072\025\057\037\060\040\055\041\054" +
    "\044\047\051\053\052\071\053\043\054\052\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\017\304\001\001\000\036\004\051\020\063\021\056\022" +
    "\046\023\072\025\057\037\060\040\055\041\054\044\047" +
    "\051\053\052\071\053\043\054\052\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\004\105\005\110\006\116" +
    "\007\100\011\107\024\310\026\104\030\102\031\075\032" +
    "\120\034\103\035\076\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\004\105\005\110\006\116\007\100\011" +
    "\107\024\313\026\104\030\102\031\075\032\120\034\103" +
    "\035\076\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\320\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\020\325\001\001\000\002\001\001" +
    "\000\004\004\327\001\001\000\002\001\001\000\006\014" +
    "\332\020\331\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\335\001\001\000\036\004" +
    "\051\020\063\021\056\022\046\023\072\025\057\037\060" +
    "\040\055\041\054\044\047\051\053\052\071\053\043\054" +
    "\052\001\001\000\002\001\001\000\004\004\340\001\001" +
    "\000\004\015\341\001\001\000\002\001\001\000\004\020" +
    "\343\001\001\000\002\001\001\000\004\004\345\001\001" +
    "\000\004\015\346\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 return lex.next_token(); 
    }


    // Connect this parser to a scanner!
    Lexer lex;
    
    public Sintax(Lexer lex){
        this.lex=lex;
    }

    public void syntax_error(Symbol s){
    System.out.println("Error de Sintaxis: Tipo: Recuperable " + s.value + " Linea: "+ (s.left+1) + " Columna: " + (s.right+1) );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
    System.out.println("Error de Sintaxis Tipo: No-Recuperable " + s.value + " Linea: "+ (s.left+1) + " Columna: " + (s.right+1) + "");
    }
    

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {


    //Aquí debe ir la lista de tablas de símbolos
    
    HashMap<String, ArrayList<String> > listaTablaSimbolos = new HashMap<String, ArrayList<String> >();
    String currentHash;
    String globalHash = "globalTS"; 
    /*listaTablaSimbolos.put(globalHash, new ArrayList<String>() );*/


    
    public void imprimirTablaSimbolos(){
        for(String key: listaTablaSimbolos.keySet()){
            System.out.println("Tabla de símbolo: " + key);
            System.out.println("Valores: ");
            for(String item: listaTablaSimbolos.get(key)){
            System.out.println("");
            }
        }
    }

  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // caso_switch ::= SIAPARECE SPACEGATO encanto DOUBLEDOT conjuros 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(33/*caso_switch*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // casos_switch ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(32/*casos_switch*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // casos_switch ::= casos_switch caso_switch 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(32/*casos_switch*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // cola_conjuro_logico ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(28/*cola_conjuro_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // cola_conjuro_logico ::= OR SPACEGATO conjuro_logico cola_conjuro_logico 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(28/*cola_conjuro_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // cola_conjuro_logico ::= AND SPACEGATO conjuro_logico cola_conjuro_logico 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(28/*cola_conjuro_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // conjuro_logico ::= NOTC SPACEGATO conjuro_relacional 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(27/*conjuro_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // conjuro_logico ::= NOTC SPACEGATO nombre_ingrediente 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(27/*conjuro_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // conjuro_logico ::= NOT SPACEGATO conjuro_relacional 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(27/*conjuro_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // conjuro_logico ::= NOT SPACEGATO nombre_ingrediente 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(27/*conjuro_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // ritual_logico ::= conjuro_logico cola_conjuro_logico 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(26/*ritual_logico*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // encantamiento_relacional ::= DIFF 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(25/*encantamiento_relacional*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // encantamiento_relacional ::= EQEQ 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(25/*encantamiento_relacional*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // encantamiento_relacional ::= GREATEREQ 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(25/*encantamiento_relacional*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // encantamiento_relacional ::= GREATER 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(25/*encantamiento_relacional*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // encantamiento_relacional ::= LESSEQ 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(25/*encantamiento_relacional*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // encantamiento_relacional ::= LESS 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(25/*encantamiento_relacional*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // conjuro_relacional ::= conjuro_arcano encantamiento_relacional conjuro_arcano 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(24/*conjuro_relacional*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // invocacion_factor ::= SPACEGATO nombre_ingrediente PARENL encanto PARENR 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(23/*invocacion_factor*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // invocacion_factor ::= Runas 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(23/*invocacion_factor*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // invocacion_factor ::= PARENL encanto PARENR 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(23/*invocacion_factor*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // invocacion_factor ::= SiNox 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(23/*invocacion_factor*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // invocacion_factor ::= NumeraDecimus 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(23/*invocacion_factor*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // invocacion_factor ::= Numera 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(23/*invocacion_factor*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // invocacion_factor ::= nombre_ingrediente 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(23/*invocacion_factor*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // invocacion_term ::= invocacion_factor 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(22/*invocacion_term*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // conjuro_arcano_prima ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // conjuro_arcano_prima ::= MINUSMINUS 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // conjuro_arcano_prima ::= PLUSPLUS 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // conjuro_arcano_prima ::= POW invocacion_term conjuro_arcano_prima 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // conjuro_arcano_prima ::= MOD invocacion_term conjuro_arcano_prima 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // conjuro_arcano_prima ::= DIV invocacion_term conjuro_arcano_prima 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // conjuro_arcano_prima ::= MUL invocacion_term conjuro_arcano_prima 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // conjuro_arcano_prima ::= MINUS invocacion_term conjuro_arcano_prima 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // conjuro_arcano_prima ::= PLUS invocacion_term conjuro_arcano_prima 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(21/*conjuro_arcano_prima*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // conjuro_arcano ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(20/*conjuro_arcano*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // conjuro_arcano ::= invocacion_term conjuro_arcano_prima 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(20/*conjuro_arcano*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // conjuro_escribir ::= ESCRIBIO PARENL encanto PARENR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(42/*conjuro_escribir*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // conjuro_leer ::= RECITA PARENL nombre_ingrediente PARENR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(41/*conjuro_leer*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // conjuro_confractus ::= CONFRACTA DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(40/*conjuro_confractus*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // conjuro_revertir ::= RIVIERTO PARENL encanto PARENR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(39/*conjuro_revertir*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // paso ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(38/*paso*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // paso ::= nombre_ingrediente 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(38/*paso*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // paso ::= nombre_ingrediente ASSIGN encanto 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(38/*paso*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // fin ::= nombre_ingrediente 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(37/*fin*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // fin ::= nombre_ingrediente ASSIGN encanto 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(37/*fin*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // inicio ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(36/*inicio*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // inicio ::= nombre_ingrediente 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(36/*inicio*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // inicio ::= nombre_ingrediente ASSIGN encanto 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(36/*inicio*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // inicio_fin_paso ::= fin 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(35/*inicio_fin_paso*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // inicio_fin_paso ::= inicio COMMA fin 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(35/*inicio_fin_paso*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // inicio_fin_paso ::= inicio COMMA fin COMMA paso 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(35/*inicio_fin_paso*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // conjuro_para ::= PARARANGUS PARENL inicio_fin_paso PARENR KEYL conjuros KEYR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(34/*conjuro_para*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // conjuro_mientras ::= MIENTRAS PARENL encanto PARENR KEYL conjuros KEYR SINO KEYL conjuros KEYR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(30/*conjuro_mientras*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // conjuro_mientras ::= MIENTRAS PARENL encanto PARENR KEYL conjuros KEYR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(30/*conjuro_mientras*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // conjuro_mutacion ::= MUTACION PARENL nombre_ingrediente PARENR KEYL casos_switch KEYR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(31/*conjuro_mutacion*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // conjuro_si ::= error KEYR 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(29/*conjuro_si*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // conjuro_si ::= SI PARENL encanto PARENR KEYL conjuros KEYR SINO KEYL conjuros KEYR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(29/*conjuro_si*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // conjuro_si ::= SI PARENL encanto PARENR KEYL conjuros KEYR DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(29/*conjuro_si*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // enlace_encanto ::= nombre_ingrediente ASSIGN encanto DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(17/*enlace_encanto*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // invocacion_encanto ::= esencia SPACEGATO nombre_ingrediente ASSIGN encanto DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(16/*invocacion_encanto*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // encanto ::= ritual_logico 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(18/*encanto*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // encanto ::= conjuro_relacional 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(18/*encanto*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // encanto ::= conjuro_arcano 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(18/*encanto*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // conjuro ::= conjuro_escribir 
            {
              Object RESULT = null;
		int celeft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int ceright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object ce = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // conjuro ::= conjuro_leer 
            {
              Object RESULT = null;
		int clleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int clright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object cl = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // conjuro ::= conjuro_confractus 
            {
              Object RESULT = null;
		int ccleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int ccright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object cc = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // conjuro ::= conjuro_revertir 
            {
              Object RESULT = null;
		int crleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int crright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object cr = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // conjuro ::= conjuro_para 
            {
              Object RESULT = null;
		int cpleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int cpright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object cp = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // conjuro ::= conjuro_mientras 
            {
              Object RESULT = null;
		int cmileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int cmiright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object cmi = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // conjuro ::= conjuro_mutacion 
            {
              Object RESULT = null;
		int cmleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int cmright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object cm = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // conjuro ::= conjuro_si 
            {
              Object RESULT = null;
		int csleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int csright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object cs = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // conjuro ::= enlace_encanto 
            {
              Object RESULT = null;
		int eeleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int eeright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object ee = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // conjuro ::= invocacion_encanto 
            {
              Object RESULT = null;
		int ieleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int ieright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object ie = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // conjuro ::= creacion_ingredientes 
            {
              Object RESULT = null;
		int Cileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left;
		int Ciright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right;
		Object Ci = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(15/*conjuro*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // conjuros ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(13/*conjuros*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // conjuros ::= conjuros conjuro 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(13/*conjuros*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // hechizo_principal ::= error KEYR 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*hechizo_principal*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // hechizo_principal ::= HECHIZOPRINCIPAL PARENL PARENR KEYL conjuros KEYR 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*hechizo_principal*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ritual_ingredientes ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(11/*ritual_ingredientes*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ritual_ingredientes ::= COMMA esencia SPACEGATO nombre_ingrediente ritual_ingredientes 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(11/*ritual_ingredientes*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // lista_ingredientes ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(10/*lista_ingredientes*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // lista_ingredientes ::= esencia SPACEGATO nombre_ingrediente ritual_ingredientes 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(10/*lista_ingredientes*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // creacion_ingredientes ::= error DOTCOMMA 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(19/*creacion_ingredientes*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // creacion_ingredientes ::= esencia SPACEGATO nombre_ingrediente DOTCOMMA 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;
		int nombre_ingredienteleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int nombre_ingredienteright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object nombre_ingrediente = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(19/*creacion_ingredientes*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // creacion_ingredientes ::= GLOBALIO SPACEGATO esencia SPACEGATO nombre_ingrediente DOTCOMMA 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;
		int nombre_ingredienteleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int nombre_ingredienteright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object nombre_ingrediente = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(19/*creacion_ingredientes*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // esencia ::= RUNAS 
            {
              Object RESULT = null;
		RESULT = "Runas"; 
              CUP$Sintax$result = new java_cup.runtime.Symbol(14/*esencia*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // esencia ::= RUNA 
            {
              Object RESULT = null;
		RESULT = "Runa"; 
              CUP$Sintax$result = new java_cup.runtime.Symbol(14/*esencia*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // esencia ::= SINOX 
            {
              Object RESULT = null;
		RESULT = "Sinox"; 
              CUP$Sintax$result = new java_cup.runtime.Symbol(14/*esencia*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // esencia ::= NUMERADECIMUS 
            {
              Object RESULT = null;
		RESULT = "Numera Decimus"; 
              CUP$Sintax$result = new java_cup.runtime.Symbol(14/*esencia*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // esencia ::= NUMERA 
            {
              Object RESULT = null;
		RESULT = "Numera"; 
              CUP$Sintax$result = new java_cup.runtime.Symbol(14/*esencia*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // hechizo ::= error KEYR 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(9/*hechizo*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // hechizo ::= creacion_ingredientes 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(9/*hechizo*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // hechizo ::= SPACEGATO HECHIZO SPACEGATO esencia SPACEGATO nombre_ingrediente PARENL lista_ingredientes PARENR KEYL conjuros KEYR 
            {
              Object RESULT = null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).value;

              CUP$Sintax$result = new java_cup.runtime.Symbol(9/*hechizo*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // hechizos ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(8/*hechizos*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // hechizos ::= hechizos hechizo 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(8/*hechizos*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Runas ::= STRING_LITERAL 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(7/*Runas*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // SiNox ::= FALSE 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(5/*SiNox*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // SiNox ::= TRUE 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(5/*SiNox*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NumeraDecimus ::= NUMERADECIMUSLITERAL 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(4/*NumeraDecimus*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Numera ::= NUMERALITERAL 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(3/*Numera*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // nombre_ingrediente ::= NOMBREINGREDIENTE 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(2/*nombre_ingrediente*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // encantamiento ::= error 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(1/*encantamiento*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // encantamiento ::= ABRACADABRA hechizos hechizo_principal 
            {
              Object RESULT = null;
		imprimirTablaSimbolos(); System.out.println("fin de ejecución");
              CUP$Sintax$result = new java_cup.runtime.Symbol(1/*encantamiento*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= encantamiento EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

